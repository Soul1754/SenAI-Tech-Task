#!/usr/bin/env node

const TextExtractor = require('./src/utils/textExtractor');
const fs = require('fs');
const path = require('path');

/**
 * Test PDF text extraction without OCR
 */
async function testPDFTextExtraction() {
    console.log('üîç Testing PDF Text Extraction (Non-OCR)');
    console.log('============================================================');
    
    const uploadsDir = './uploads/Resumes';
    
    try {
        // Get PDF files
        const files = fs.readdirSync(uploadsDir);
        const pdfFiles = files.filter(f => f.toLowerCase().endsWith('.pdf'));
        
        console.log(`üìÅ Found ${pdfFiles.length} PDF files`);
        
        for (const file of pdfFiles.slice(0, 3)) { // Test first 3 PDF files
            try {
                const startTime = Date.now();
                const filePath = path.join(uploadsDir, file);
                
                console.log(`\nüîç Testing: ${file}`);
                console.log(`üìä File type: PDF`);
                
                const result = await TextExtractor.extractText(filePath, 'pdf');
                const processingTime = Date.now() - startTime;
                
                // Assess quality
                const quality = TextExtractor.assessTextQuality(result.text);
                
                console.log(`‚è±Ô∏è  Processing time: ${processingTime}ms`);
                console.log(`üìù Extracted text length: ${result.text.length} characters`);
                console.log(`üéØ Extraction method: ${result.metadata.extractionMethod || 'text'}`);
                console.log(`üìÑ PDF pages: ${result.metadata.pages}`);
                
                if (result.metadata.ocrConfidence !== undefined) {
                    console.log(`üìà OCR confidence: ${Math.round(result.metadata.ocrConfidence)}%`);
                }
                
                console.log(`‚úÖ Quality: ${quality.quality} (${quality.confidence}% confidence)`);
                console.log(`üìä Word count: ${quality.wordCount}`);
                console.log(`üîë Keywords found: ${quality.keywordsFound}`);
                
                if (quality.issues.length > 0) {
                    console.log(`‚ö†Ô∏è  Issues: ${quality.issues.join(', ')}`);
                }
                
                // Show text preview (first 200 characters)
                const preview = result.text.substring(0, 200).replace(/\n/g, ' ').trim();
                console.log(`üìñ Text preview: "${preview}${result.text.length > 200 ? '...' : ''}"`);
                
                if (result.metadata.extractionMethod === 'text') {
                    console.log('‚úÖ SUCCESS - Text-based PDF');
                } else {
                    console.log('‚ö†Ô∏è  Image-based PDF - OCR needed');
                }
                
            } catch (error) {
                console.error(`‚ùå Failed to process ${file}:`, error.message);
            }
        }

        console.log('\nüèÅ PDF Text Extraction Summary');
        console.log('============================================================');
        console.log('‚ÑπÔ∏è  This test shows which PDFs contain extractable text vs need OCR');
        
    } catch (error) {
        console.error('‚ùå Test failed:', error);
    }
}

// Run the test
testPDFTextExtraction().catch(console.error);
